{
  "hash": "6c20f4385e25ef5bfc3e7b8275cbbe42",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"OpenAI's structured output vs. libraries\"\nauthor: \"Paul Simmering\"\ndate: \"2024-08-10\"\ncategories: [\"Machine Learning\", \"Python\"]\nimage: \"image.png\"\n---\n\n\n\n\nOn August 6 OpenAI released [structured outputs] in their API. In this article, I'll compare the new feature to the libraries that are already available. In May, I [compared](/blog/structured_output/) 10 different libraries for structured output.\n\nBasically, OpenAI's structured outputs make the following code possible:\n\n::: {#e143a3eb .cell execution_count=1}\n``` {.python .cell-code}\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n\n\nclass Ingredient(BaseModel):\n    name: str\n    amount: str\n    kcal: int\n\n\nclass Recipe(BaseModel):\n    ingredients: list[Ingredient]\n    instructions: str\n\n\nclient = OpenAI()\n\ncompletion = client.beta.chat.completions.parse(\n    model=\"gpt-4o-2024-08-06\",\n    messages=[{\"role\": \"user\", \"content\": \"Write an apple pie recipe\"}],\n    response_format=Recipe,\n)\n\n```\n:::\n\n\n::: {#32937edc .cell execution_count=2}\n``` {.python .cell-code}\nimport json\napple_pie_recipe = Recipe(**json.loads(completion.choices[0].message.content))\n\nprint(apple_pie_recipe)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ningredients=[Ingredient(name='All-purpose flour', amount='2 1/2 cups', kcal=1140), Ingredient(name='Granulated sugar', amount='3/4 cup', kcal=600), Ingredient(name='Unsalted butter', amount='1 cup (2 sticks)', kcal=1610), Ingredient(name='Ice water', amount='6 to 8 tablespoons', kcal=0), Ingredient(name='Salt', amount='1 teaspoon', kcal=0), Ingredient(name='Pressed apple slices', amount='6 cups', kcal=300), Ingredient(name='Ground cinnamon', amount='1 teaspoon', kcal=6), Ingredient(name='Nutmeg', amount='1/4 teaspoon', kcal=0), Ingredient(name='Lemon juice', amount='1 tablespoon', kcal=4), Ingredient(name='Egg yolk', amount='1', kcal=55), Ingredient(name='Milk', amount='2 tablespoons', kcal=12)] instructions='### Preparing the Crust:\\n1. **Mix Dry Ingredients**: In a large mixing bowl, combine 2 1/2 cups of all-purpose flour and 1 teaspoon of salt.\\n2. **Add the Butter**: Incorporate 1 cup (2 sticks) of unsalted butter, diced and chilled. Use a pastry cutter or fork to blend until the mixture resembles coarse breadcrumbs.\\n3. **Add Ice Water**: Gradually stir in 6 to 8 tablespoons of ice-cold water, mixing just until the dough holds together.\\n4. **Chill**: Divide the dough into two balls, wrap in plastic wrap, and refrigerate for at least 30 minutes.\\n\\n### Preparing the Filling:\\n5. **Prepare Apples**: Peel and slice enough apples to make 6 cups. Use a mixture of tart and sweet apples for best flavor.\\n6. **Flavor the Apples**: Place the apple slices in a bowl and sprinkle with 3/4 cup of granulated sugar, 1 teaspoon of ground cinnamon, 1/4 teaspoon of nutmeg, and 1 tablespoon of lemon juice. Mix well.\\n\\n### Assembling the Pie:\\n7. **Preheat Oven**: Preheat the oven to 425째F (220째C).\\n8. **Roll the Dough**: Roll out one part of the chilled dough on a floured surface. Line a 9-inch pie pan with the rolled dough.\\n9. **Fill the Crust**: Pour the apple mixture into the crust, spreading evenly.\\n10. **Roll Top Crust**: Roll out the second dough ball and place it over the filled pie. Use a knife to trim the edges and crimp them to seal.\\n11. **Create Vents**: Cut three to four vents in the top of the crust to allow steam to escape.\\n12. **Egg Wash**: In a small bowl, whisk 1 egg yolk with 2 tablespoons of milk. Brush this mixture over the top crust.\\n\\n### Baking:\\n13. **Bake**: Place the pie on the middle rack of the oven and bake for 15 minutes.\\n14. **Reduce Temperature**: Lower the oven temperature to 350째F (175째C) and bake for an additional 35 to 40 minutes or until the crust is golden brown and you can see the apple filling bubbling through the vents.\\n\\n### Cooling:\\n15. **Cool**: Let the pie cool on a wire rack for at least 2 hours before serving, allowing the juices to thicken.\\n\\n### Serving:\\n16. **Enjoy**: Serve slices of apple pie warm or at room temperature, perhaps with a scoop of creamy vanilla ice cream or a dollop of whipped cream.'\n```\n:::\n:::\n\n\nAnd it's guaranteed that the output will be JSON that can be parsed into a `Recipe` object. Previously this was only possible with function calling, which was a bit awkward to code and was best done with a library like [instructor](https://github.com/jxnl/instructor).\n\nThe closest library to OpenAI's new feature is [outlines](https://github.com/outlines-dev/outlines). Like OpenAI, outlines constrains the tokens that can be generated. This has three advantages:\n\n1. the definition of the output format doesn't count as input tokens\n2. the output is guaranteed to follow the structure, in contrast to JSON mode and function calling which are very likely but not guaranteed to follow the structure\n3. it doesn't slow down the generation process, rather it speeds it up because tokens with no alternatives can be automatically placed rather than generated by the model\n\nA clear downside of OpenAI's implementation is that it only works with its own models. I hope that similarly to how other proprietary and open model developers have adopted function calling, they'll also adopt structured outputs.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}